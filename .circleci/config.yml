version: 2.1
workflows:
  version: 2
  release-workflow:
    jobs:
      - release:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish-documentation:
          requires:
            - release
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
  default:
    jobs:
      - build
      - test
      - publish-snapshot:
          requires:
            - build
            - test
          filters:
            branches:
              only:
                - main

commands:
  build-release:
    steps:
      - run:
          name: Build libraries
          command: make build-release

  build-cli:
    steps:
      - run:
          name: Build command line interface
          command: make build-cli

  run-tests:
    steps:
      - run:
          name: Check Java code style
          command: make checkstyle
      - run:
          name: Jacoco test report
          command: ./gradlew jacocoTestReport
      - run:
          name: Run unit-test for all modules
          command: make test
      - store_artifacts:
          path: mapbox/app/build/reports
          destination: reports
      - store_test_results:
          path: mapbox/app/build/test-results
#      Disabling Codecov (for now) due to https://about.codecov.io/security-update/
#      - run:
#          name: Post code coverage report to Codecov.io
#          command: |
#            bash <(curl -s https://codecov.io/bash)

  setup-aws-credentials:
    steps:
      - run:
          name: Install mbx-ci and obtain credentials
          command: |
            curl -Ls https://mapbox-release-engineering.s3.amazonaws.com/mbx-ci/latest/mbx-ci-linux-amd64 > mbx-ci && chmod 755 ./mbx-ci
            ./mbx-ci aws setup

jobs:
  build:
    working_directory: ~/code
    docker:
      - image: mbgl/android-ndk-r21e:latest
    steps:
      - checkout
      - build-release
      - build-cli

  test:
    working_directory: ~/code
    docker:
      - image: mbgl/android-ndk-r21e:latest
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}
      - run-tests

# ------------------------------------------------------------------------------
  publish-snapshot:
    environment:
      - MBX_CI_DOMAIN: o619qyc20d.execute-api.us-east-1.amazonaws.com
    docker:
      - image: mbgl/android-ndk-r21e:latest
    working_directory: ~/code
    steps:
      - checkout
      - setup-aws-credentials
      - deploy:
          name: Publish Java snapshot libraries to Mapbox SDK Registry
          command: |
            make sdk-registry-publish-snapshot

  release:
    environment:
      - MBX_CI_DOMAIN: o619qyc20d.execute-api.us-east-1.amazonaws.com
    docker:
      - image: mbgl/android-ndk-r21e:latest
    working_directory: ~/code
    steps:
      - checkout
      - build-release
      - build-cli
      - run-tests
      - setup-aws-credentials
      - deploy:
          name: Upload libraries to Mapbox SDK Registry
          command: |
            make sdk-registry-upload
#      This is not yet supported, still need to be able to authenticate CI to create a Github pull request.
#      - run:
#          name: Create pull request in api-downloads
#          command: |
#            make sdk-registry-publish
  publish-documentation:
    environment:
      - MBX_CI_DOMAIN: o619qyc20d.execute-api.us-east-1.amazonaws.com
    docker:
      - image: mbgl/android-ndk-r21e:latest
    working_directory: ~/code
    steps:
      - checkout
      - setup-aws-credentials
      - run:
          name: Publish API docs
          command: |
            GITHUB_WRITER_TOKEN=$(./mbx-ci github writer public token)
            git remote set-url origin "https://x-access-token:$GITHUB_WRITER_TOKEN@github.com/mapbox/mapbox-java.git"
            git config --global user.email no-reply@mapbox.com && git config --global user.name mapbox-ci
            ./scripts/publish_api_docs_android.sh -p $GITHUB_WRITER_TOKEN -t $CIRCLE_TAG
