apply plugin: 'java-library'

sourceSets {
    main.java.srcDirs = ['../services-directions/src/main/java', '../services-geocoding/src/main/java',
                         '../services-matching/src/main/java', '../services-matrix/src/main/java',
                         '../services-optimization/src/main/java', '../services-staticmap/src/main/java',
                         '../services-speech/src/main/java', '../services-tilequery/src/main/java',
                         '../services-route-tiles/src/main/java', '../services-directions-refresh/src/main/java',
                         '../services-isochrone/src/main/java']
}

dependencies {
    api project(":services-core")
    api project(":services-geojson")
    api project(":services-directions-models")
    api project(":services-directions-refresh-models")

    // Annotations
    compileOnly dependenciesList.supportAnnotation

    // AutoValue
    compileOnly dependenciesList.autoValue
    compileOnly dependenciesList.autoValueGson
    annotationProcessor(dependenciesList.autoValueGson)
}

// Required because the autovalue picks up and generates duplicate class for walking options from services-directions-models,
// possibly because they are in the same package as the rest of services-directions.
// Placing them in the same package has been intentional to avoid breaking changes.
tasks.withType(Jar) { jarTask ->
    if (!jarTask.name.endsWith("sourcesJar")) {
        jarTask.exclude("**/*WalkingOptions*.class")
    }
}