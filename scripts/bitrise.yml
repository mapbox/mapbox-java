---
default_step_lib_source: "https://github.com/bitrise-io/bitrise-steplib.git"
format_version: "1.0.0"
trigger_map:
  -
    is_pull_request_allowed: false
    pattern: gh-pages
    workflow: gh-pages
  -
    is_pull_request_allowed: true
    pattern: "*"
    workflow: gh-pages
workflows:
  gh-pages:
    steps:
      -
        slack:
          inputs:
            -
              webhook_url: $SLACK_HOOK_URL
            -
              channel: "#gl-bots"
            -
              from_username: "Bitrise Android"
            -
              from_username_on_error: "Bitrise Android"
            -
              message: "<${BITRISE_BUILD_URL}|Build #${BITRISE_BUILD_NUMBER}> for <https://github.com/mapbox/mapbox-java/compare/${BITRISE_GIT_BRANCH}|mapbox/mapbox-java@${BITRISE_GIT_BRANCH}> by ${GIT_CLONE_COMMIT_COMMITER_NAME} passed"
            -
              message_on_error: "<${BITRISE_BUILD_URL}|Build #${BITRISE_BUILD_NUMBER}> for <https://github.com/mapbox/mapbox-java/compare/${BITRISE_GIT_BRANCH}|mapbox/mapbox-java@${BITRISE_GIT_BRANCH}> by ${GIT_CLONE_COMMIT_COMMITER_NAME} failed"
            -
              icon_url: "https://bitrise-public-content-production.s3.amazonaws.com/slack/bitrise-slack-icon-128.png"
            -
              icon_url_on_error: "https://bitrise-public-content-production.s3.amazonaws.com/slack/bitrise-slack-error-icon-128.png"
          run_if: "{{enveq \"SKIPCI\" \"false\"}}"
          title: "Post to Slack"
  primary:
    steps:
      -
        script:
          inputs:
            -
              content: |-
                  #!/bin/bash
                  if [[ -n "$(echo $GIT_CLONE_COMMIT_MESSAGE_SUBJECT | sed -n '/\[skip ci\]/p')"  ||
                        -n "$(echo $GIT_CLONE_COMMIT_MESSAGE_SUBJECT | sed -n '/\[ci skip\]/p')"  ||
                        -n "$(echo $GIT_CLONE_COMMIT_MESSAGE_BODY    | sed -n 's/\[skip ci\]/p')" ||
                        -n "$(echo $GIT_CLONE_COMMIT_MESSAGE_BODY    | sed -n 's/\[ci skip\]/p')" ]]; then
                      envman add --key SKIPCI --value true
                  else
                      envman add --key SKIPCI --value false
                  fi
          title: "Check for skipping CI"
      -
        script:
          inputs:
            -
              content: |-
                  #!/bin/bash
                  make checkstyle
            -
              is_debug: "yes"
          title: "Run Checkstyle"
      -
        script:
          inputs:
            -
              content: |-
                  #!/bin/bash
                  make build-release-java
            -
              is_debug: "yes"
          title: "Build Java Services"
      -
        script:
          inputs:
            -
              content: |-
                  #!/bin/bash
                  make build-release-android
            -
              is_debug: "yes"
          title: "Build Android Services"
      -
        script:
          inputs:
            -
              content: |-
                  #!/bin/bash
                  make test-java
            -
              is_debug: "yes"
          title: "Run Java Project Unit Tests"
      -
        script:
          inputs:
            -
              content: |-
                  #!/bin/bash
                  make test-android
            -
              is_debug: "yes"
          title: "Run Android Project Unit Tests"
      -
        slack:
          inputs:
            -
              webhook_url: $SLACK_HOOK_URL
            -
              channel: "#gl-bots"
            -
              from_username: "Bitrise Android"
            -
              from_username_on_error: "Bitrise Android"
            -
              message: "<${BITRISE_BUILD_URL}|Build #${BITRISE_BUILD_NUMBER}> for <https://github.com/mapbox/mapbox-java/compare/${BITRISE_GIT_BRANCH}|mapbox/mapbox-java@${BITRISE_GIT_BRANCH}> by ${GIT_CLONE_COMMIT_COMMITER_NAME} passed"
            -
              message_on_error: "<${BITRISE_BUILD_URL}|Build #${BITRISE_BUILD_NUMBER}> for <https://github.com/mapbox/mapbox-java/compare/${BITRISE_GIT_BRANCH}|mapbox/mapbox-java@${BITRISE_GIT_BRANCH}> by ${GIT_CLONE_COMMIT_COMMITER_NAME} failed"
            -
              icon_url: "https://bitrise-public-content-production.s3.amazonaws.com/slack/bitrise-slack-icon-128.png"
            -
              icon_url_on_error: "https://bitrise-public-content-production.s3.amazonaws.com/slack/bitrise-slack-error-icon-128.png"
          run_if: "{{enveq \"SKIPCI\" \"false\"}}"
          title: "Post to Slack"
  scheduled:
    steps:
      -
        script:
          inputs:
            -
              content: |-
                  #!/bin/bash
                  apt-get install -y pkg-config python-pip python-dev build-essential
                  pip install awscli
          title: "Install Linux Dependencies"
      -
        script:
          inputs:
            -
              content: |-
                  #!/bin/bash
                  aws s3 cp s3://mapbox/android/signing-credentials/secring.gpg secring.gpg
              opts:
                is_expand: true
          title: "Fetch GPG Secring For SDK Signing"
      -
        script:
          inputs:
            -
              content: |-
                  #!/bin/bash
                  echo "NEXUS_USERNAME=$PUBLISH_NEXUS_USERNAME
                  NEXUS_PASSWORD=$PUBLISH_NEXUS_PASSWORD
                  signing.keyId=$SIGNING_KEYID
                  signing.password=$SIGNING_PASSWORD
                  signing.secretKeyRingFile=../../secring.gpg" >> mapbox/gradle.properties
              opts:
                is_expand: true
          title: "Inject Signing And Publishing Credentials"
      -
        script:
          inputs:
            -
              content: |-
                  #!/bin/bash
                  make build-release-java
          title: "Build Java Services"
      -
        script:
          inputs:
            -
              content: |-
                  #!/bin/bash
                  make build-release-android
          title: "Build Android Services"
      -
        script:
          inputs:
            -
              content: |-
                  #!/bin/bash
                  make test-java
          title: "Run Java Project Unit Tests"
      -
        script:
          inputs:
            -
              content: |-
                  #!/bin/bash
                  make test-android
          title: "Run Android Project Unit Tests"
      -
        script:
          inputs:
            -
              content: |-
                  #!/bin/bash
                  make publish-java
          title: "Publish Java Services To Maven Central"
      -
        script:
          inputs:
            -
              content: |-
                  #!/bin/bash
                  make publish-android
          title: "Publish Android Services To Maven Central"
